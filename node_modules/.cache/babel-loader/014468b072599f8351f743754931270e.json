{"ast":null,"code":"import{useRef}from'react';import Card from'../ui/Card';import classes from'./NewMeetupForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NewMeetupForm(props){var titleInputRef=useRef();var imageInputRef=useRef();var addressInputRef=useRef();var descriptionInputRef=useRef();function submitHandler(event){event.preventDefault();var enteredTitle=titleInputRef.current.value;var enteredImage=imageInputRef.current.value;var enteredAddress=addressInputRef.current.value;var enteredDescription=descriptionInputRef.current.value;var meetupData={title:enteredTitle,image:enteredImage,adress:enteredAddress,description:enteredDescription};props.onAddMeetup(meetupData);}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"image\",children:\"Image\"}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",required:true,id:\"image\",ref:imageInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,id:\"title\",ref:titleInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",children:\"Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",required:true,id:\"address\",ref:addressInputRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",required:true,rows:\"5\",ref:descriptionInputRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{children:\"Add Meetup\"})})]})});}export default NewMeetupForm;","map":{"version":3,"sources":["/Users/krzysztofbaranski/Documents/react_project_one/src/components/meetups/NewMeetupForm.js"],"names":["useRef","Card","classes","NewMeetupForm","props","titleInputRef","imageInputRef","addressInputRef","descriptionInputRef","submitHandler","event","preventDefault","enteredTitle","current","value","enteredImage","enteredAddress","enteredDescription","meetupData","title","image","adress","description","onAddMeetup","form","control","actions"],"mappings":"AAAA,OAASA,MAAT,KAAuB,OAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,C,wFAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,GAAMC,CAAAA,aAAa,CAAGL,MAAM,EAA5B,CACA,GAAMM,CAAAA,aAAa,CAAGN,MAAM,EAA5B,CACA,GAAMO,CAAAA,eAAe,CAAGP,MAAM,EAA9B,CACA,GAAMQ,CAAAA,mBAAmB,CAAGR,MAAM,EAAlC,CAEA,QAASS,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5BA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,YAAY,CAAGP,aAAa,CAACQ,OAAd,CAAsBC,KAA3C,CACA,GAAMC,CAAAA,YAAY,CAAGT,aAAa,CAACO,OAAd,CAAsBC,KAA3C,CACA,GAAME,CAAAA,cAAc,CAAGT,eAAe,CAACM,OAAhB,CAAwBC,KAA/C,CACA,GAAMG,CAAAA,kBAAkB,CAAGT,mBAAmB,CAACK,OAApB,CAA4BC,KAAvD,CAEA,GAAMI,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAEP,YADU,CAEjBQ,KAAK,CAAEL,YAFU,CAGjBM,MAAM,CAAEL,cAHS,CAIjBM,WAAW,CAAEL,kBAJI,CAAnB,CAOAb,KAAK,CAACmB,WAAN,CAAkBL,UAAlB,EACD,CAED,mBACE,KAAC,IAAD,wBACE,cAAM,SAAS,CAAEhB,OAAO,CAACsB,IAAzB,CAA+B,QAAQ,CAAEf,aAAzC,wBACE,aAAK,SAAS,CAAEP,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,OAAf,mBADF,cAEE,cAAO,IAAI,CAAC,KAAZ,CAAkB,QAAQ,KAA1B,CAA2B,EAAE,CAAC,OAA9B,CAAsC,GAAG,CAAEnB,aAA3C,EAFF,GADF,cAKE,aAAK,SAAS,CAAEJ,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,OAAf,mBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,KAA3B,CAA4B,EAAE,CAAC,OAA/B,CAAuC,GAAG,CAAEpB,aAA5C,EAFF,GALF,cASE,aAAK,SAAS,CAAEH,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,SAAf,qBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,KAA3B,CAA4B,EAAE,CAAC,SAA/B,CAAyC,GAAG,CAAElB,eAA9C,EAFF,GATF,cAaE,aAAK,SAAS,CAAEL,OAAO,CAACuB,OAAxB,wBACE,cAAO,OAAO,CAAC,aAAf,yBADF,cAEE,iBACE,EAAE,CAAC,aADL,CAEE,QAAQ,KAFV,CAGE,IAAI,CAAC,GAHP,CAIE,GAAG,CAAEjB,mBAJP,EAFF,GAbF,cAsBE,YAAK,SAAS,CAAEN,OAAO,CAACwB,OAAxB,uBACE,sCADF,EAtBF,GADF,EADF,CA8BD,CAED,cAAevB,CAAAA,aAAf","sourcesContent":["import { useRef } from 'react';\nimport Card from '../ui/Card';\nimport classes from './NewMeetupForm.module.css';\n\nfunction NewMeetupForm(props) {\n  const titleInputRef = useRef();\n  const imageInputRef = useRef();\n  const addressInputRef = useRef();\n  const descriptionInputRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredTitle = titleInputRef.current.value;\n    const enteredImage = imageInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n\n    const meetupData = {\n      title: enteredTitle,\n      image: enteredImage,\n      adress: enteredAddress,\n      description: enteredDescription,\n    };\n\n    props.onAddMeetup(meetupData);\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"image\">Image</label>\n          <input type=\"url\" required id=\"image\" ref={imageInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" required id=\"title\" ref={titleInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"address\">Address</label>\n          <input type=\"text\" required id=\"address\" ref={addressInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            required\n            rows=\"5\"\n            ref={descriptionInputRef}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Add Meetup</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default NewMeetupForm;\n"]},"metadata":{},"sourceType":"module"}